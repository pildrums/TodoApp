{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoListItem","todo","onRemove","onToggle","onImportant","id","text","checked","star","cn","onClick","TodoList","todos","map","App","setTodos","nextId","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.563a9b31.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({children}) => {\r\n    return (\r\n        <div className='TodoTemplate'>\r\n            <div className=\"app-title\">일정 관리</div>\r\n            <div className=\"content\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoTemplate;","import {useState, useCallback} from 'react';\r\nimport {MdAdd} from 'react-icons/md';\r\nimport './TodoInsert.scss';\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const onChange = useCallback(e => {\r\n        setValue(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            onInsert(value);\r\n            setValue('');\r\n            e.preventDefault();\r\n        },\r\n        [onInsert, value],\r\n    );\r\n\r\n    return (\r\n        <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n            <input\r\n                placeholder=\"할 일을 입력하세요\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <button type='submit'>\r\n                <MdAdd />\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React from 'react';\r\nimport {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline, \r\n  MdStar,\r\n} from \"react-icons/md\";\r\nimport './TodoListItem.scss';\r\nimport cn from 'classnames';\r\n\r\nconst TodoListItem = ({todo, onRemove, onToggle, onImportant}) => {\r\n    const {id, text, checked, star} = todo;\r\n\r\n    return (\r\n        <div className={cn(\"TodoListItem\", {star})}>\r\n            <div className={cn(\"checkbox\", {checked})} onClick={() => onToggle(id)}>\r\n                {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n                <div className=\"text\">{text}</div>\r\n            </div>\r\n            <div className={cn(\"important\", {star})} onClick={() => onImportant(id)}>\r\n              <MdStar />\r\n            </div>\r\n            <div className=\"remove\" onClick={() => onRemove(id)}>\r\n                <MdRemoveCircleOutline />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({todos, onRemove, onToggle, onImportant}) => {\r\n  return (\r\n    <div className=\"TodoList\">\r\n      {todos.map(todo => (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={todo.id} \r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          onImportant={onImportant}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트 기초 알아보기',\n      checked: true,\n      star: false,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n      star: false,\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false,\n      star: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current++;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo => \n          todo.id === id ? {...todo, checked: !todo.checked} : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  const onImportant = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo => \n          todo.id === id ? {...todo, star: !todo.star} : todo)\n      );\n    },\n    [todos]\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList\n        todos={todos} \n        onRemove={onRemove} \n        onToggle={onToggle}\n        onImportant={onImportant}\n      />\n    </TodoTemplate>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}